<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
		default-lazy-init="true">

	<!-- Replaces properties with ${foo} syntax -->
	<bean id="datasourcePropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:datasource.properties" />
	</bean>

	
	<!-- Datasource -->	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.connection.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		
		<property name="initialSize" value="5" />
		<property name="maxActive" value="10" />
	</bean>


	<!--  JPA Configuration -->
		
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">	
  		<property name="jpaVendorAdapter">
  			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
	  			<property name="databasePlatform" value="${hibernate.dialect}" />
	  			<property name="showSql" value="false" />
	  			<property name="generateDdl" value="${jpa.generate.ddl}" />
  			</bean>
  		</property>

		<property name="persistenceUnitManager" ref="persistenceUnitManager" />  			
	</bean>	
	
	<bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="defaultDataSource" ref="dataSource"/>
	</bean>
	
	<bean name="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Tells Spring that it should scan for @Transactional annotations to determine transaction boundaries -->
	<tx:annotation-driven transaction-manager="jpaTransactionManager" />
	
	<!-- Will inject entityManager into @PersistenceContext annotated field -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!--  Scans for repositories (the daos) -->
	<context:component-scan base-package="fi.uoma.scrummer.domain.persistence.jpa">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
    <context:annotation-config/>

</beans>
